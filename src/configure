#!/bin/sh
rm -f gnucap-modelgen
ln -s ../modelgen/O/gnucap-modelgen .
mkdir O

echo "CCFLAGS = \\" >Make.ccflags
echo "LIBS = \\" >Make.libs
    
(cd O; rm -f gnucap-modelgen; ln -s ../../modelgen/O/gnucap-modelgen gnucap-modelgen)
if [ -f /usr/lib/libreadline.a -a -f /usr/lib/libtermcap.a ] ; then
    echo "using readline"
    echo "-DHAS_READLINE \\" >>Make.ccflags
    echo "-lreadline -ltermcap \\" >>Make.libs
else
    echo "either libtermcap or libreadline is missing - not using readline"
fi

rm -f test_isnan.o
g++ -c test_isnan.cc
if [ -f test_isnan.o ] ; then
    echo "has isnan"
else
    echo "no isnan"
    echo "-DNEEDS_IS_NAN \\" >>Make.ccflags
fi
rm -f test_isnan.o

rm -f test_isinf.o
g++ -c test_isinf.cc
if [ -f test_isinf.o ] ; then
    echo "has isinf"
else
    echo "no isinf"
    echo "-DNEEDS_IS_INF \\" >>Make.ccflags
fi
rm -f test_isinf.o

echo "-DUNIX -O2 -DNDEBUG -I.. -I. -fno-exceptions -W" >>Make.ccflags
echo "" >>Make.libs
echo "" >>Make.libs

cat <<CAT_EOF >Make.sys
#------------------------------------------------------------------------
VPATH = .:..
CCC = g++

LDFLAGS =

.SUFFIXES : .o .cc
.cc.o:; \$(CCC) \$(CCFLAGS) -c \$<
#------------------------------------------------------------------------
\$(TARGET): \$(OBJS)
	rm -f \$@
	\$(CCC) \$(CCFLAGS) \$(OBJS) -o \$@ \$(LIBS) \$(LDFLAGS)
#------------------------------------------------------------------------
CAT_EOF

cat Make1 Make.ccflags Make.libs Make.sys Make3 Make.depend >O/Makefile

exit 0
