Commands Checklist
======================================================
Updated on: 12/07/2013

1.ALIAS
Purpose:Creates an alias for command
Status:Implemented

Syntax:
      alias [word] [command]

Comments:
Command creates an alias for ''command'' with the name ''word''.

Example:
       gnucap>alias info sysinfo
       gnucap>info
       Model name	  : Intel(R) Core(TM) i5-2450M CPU @ 2.50GHz
       OS Description     :"Ubuntu 12.04 LTS"
       CPU MHz	          : 2494.409
       RAM Available      :1012348kB
       RAM Free           :132372kB


2.CIRCBYLINE
Purpose:Reads circuit(.ckt) files line by line
Status:Not implemented


3.DEF
Purpose:Command is used to define a function.
Status:Implemented
Syntax:
    def [function_name]

Comments: Maximum three arguments can be provided which can be of type int or float.Variables are named x,y,z by default and only they should be used in the expression.

Example:
      gnucap>def f
      >x*2+y*2+z*2
      gnucap>f(1,2,3)
      12.
      gnucap>f(1.0,2.2,3.4)
      13.2
      gnucap>def max
      >(x>y)*x+(x<=y)*y
      gnucap>max(3.0,4.0)
      4.0

4.ECHO
Purpose:Prints the text
Status:Implemented

Syntax:
     echo [text]

Comments:
Command echoes the text in the interpreter.

Example:
     gnucap> echo
     Usage: echo [text]
     gnucap>echo "Hello"
     "Hello"
     gnucap>echo Hello World!
     Hello World!
     gnucap>


5.HISTORY
Purpose:Review the previous commands
Status:Implemented
Syntax:
    history
    history -t 
    history -s

Comments:
Command prints the history of commands that has been executed after enabling the history track mode. Commands tracking can be stopped by disabling the history mode.

Example:
      gnucap>history -t  starts tracking history
      gnucap>history     prints the history
      gnucap>history -s  stops tracking history





6.MDUMP
Purpose:Dumps the matrix values to a file
Status:Not implemented

7.PRE
Purpose:Executes command prior to parsing the circuit
Status:Not implemented


8.QUIT
Purpose:Terminates the gnucap interpreter
Status:Implemeted

Syntax:
    quit
    quit [status]

Comments:
 This quit command is the modified form of the current quit command.status(integer)can be passed as a parameter which signals the success or failure of the termination process to the Operating System.Non-zero status indicates unsuccessful termination to the Operating System.

Example:
     gnucap>quit 0       returns a success value to the Operating system
     Make sure you have saved everything you wanted to.
     Are you sure you want to quit?y/n:


9.RMCIRC
Purpose:Removes the current circuit from the list of circuits sourced into gnucap
Status:Not implemented

10.RESET
Purpose:Reset command re-parses the input file.The circuit can then be re-run from its initial state
Status:Not implemented

11.SET
Purpose:Sets the value of a variable
Status:Not implemented


12.SHELL
Purpose:Calls command interpreter of operating system
Status:Implemented
Syntax:
       shell

Comments:
Run 'exit' command to return to gnucap command interpreter.

Example:
     gnucap> shell
     itsrishre@rishabh-laptop:~$
When you are done with the shell,you can type exit to return to gnucap interpreter.
     itsrishre@rishabh-laptop:~$ exit
     gnucap>


13.SHOWMOD
Purpose:Lists model parameter values
Status:Not implemented

14.SOURCE
Purpose:Reads a gnucap input file
Status:Not implemented

15.STRCMP
Purpose:Compares two string
Status:Implemented
Syntax:
      strcmp string1 string2
      strcmp --help

Comments:

Compare two strings and outputs 0 if the two strings are equal otherwise output is the difference of the first non-matching character in string1 and string2.
Strings may be passed with or without " ".

Example:
      gnucap> strcmp "hello" hello   evaluates to true(flag=0)
      gnucap> strcmp hello hello     also evaluates to true.
      gnucap> strcmp --help          prints the usage of the command. 


16.SYSINFO
Purpose:Command prints the system information
Status:Implemented
Syntax:
       sysinfo

Comments:
Command prints the useful system information which users may use to send bug reports to the gnucap developers community.
This command doesn't works on Windows.
      

Example:
	gnucap> sysinfo
        Model name	: Intel(R) Core(TM) i5-2450M CPU @ 2.50GHz
        OS Description  :"Ubuntu 12.04 LTS"
	CPU MHz		: 2494.420
	RAM Available   :1012348kB
	RAM Free        :145640kB


17.TRACE
Purpose:Trace command traces nodes
Status:Not implemented

18.UNALIAS
Purpose:Removes any aliases present for the commands
Status:Implemented

Syntax:
     unalias [word]
     unalias all

Comments:
word is the aliased name of the command. all option removes all the specified aliases.

Example:
If info is the aliased name of sysinfo then it can be unaliased like

     gnucap>unalias info  Removes the alias for sysinfo
     gnucap>unalias all   Removes all aliases
     are you sure you want to remove all aliases?y/n:y
     all aliases removed


19.UNDEF
Purpose:Command removes the the user-defined functions.
Status:Implemented

Syntax:
    undef [function_name]
    undef all

Comments:
all flag removes all the user defined functions.

Example:
     gnucap>undef max    Removes the ''max'' function
     gnucap>unalias all   Removes all function definitions
     are you sure you want to remove all function definitions?y/n:y
     all functions removed.


20.VERSION
Purpose:Prints the version of gnucap
Status:Implemented

Syntax:

    version

Comments:
'ver' also works.

Example:
	gnucap> version
        Gnucap Version: 2009.12.07 RCS 26.136



*Commands's Syntax,Details and Examples will be added after the command is implemented.
Check http://gnucap.org/dokuwiki/doku.php?id=gnucap:user:command_plugins

