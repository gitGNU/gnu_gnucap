Commands Checklist
======================================================
Updated on: 12/09/2013

1.ALIAS
Purpose:Creates an alias for command
Status:Implemented

Syntax:
      alias [word] [command]

Comments:
Command creates an alias for ''command'' with the name ''word''.

Example:
       gnucap>alias info sysinfo
       gnucap>info
       Model name	  : Intel(R) Core(TM) i5-2450M CPU @ 2.50GHz
       OS Description     :"Ubuntu 12.04 LTS"
       CPU MHz	          : 2494.409
       RAM Available      : 1012348kB
       RAM Free           : 132372kB

2.ALTER
Purpose:Command is used to change the value of a parameter.
Status:Implemented

Syntax:
    alter
    alter parameter-name value

Comments:Sets the value of specified parameter

Example:
To modify the value of vcc in a ciruit
    gnucap>alter vcc = 15
    gnucap>

and to modify the resitances say R1 and R2
     gnucap>alter R1=5k R2=100
     gnucap>

3.ASPICE
Purpose:Start an asynchronous run and loads the data to specified output file.

Status:Implemented


Syntax:
    aspice input_file output_file


Comments: 
input_file is a file which is to be run in batch mode and output_file corresponds to the file on which data will be loaded.If output_file already exists then the contents of the file are overwritten by the current output.


Example: 
Suppose my script file contains an instruction to execute the version command.Then,command to load the output of the script into another file say, version.txt is

    gnucap>aspice script version.txt
    Gnucap
    Main version: 2009.12.07 RCS 26.136
    gnucap>
Now,version.txt contains the output of version command. 


4.CIRCBYLINE
Purpose:Enter a circuit line by line
Status:Done

5.CLS
Purpose:Clears the gnucap interpreter
Status:Implemented

Syntax:
      cls
      cls [command]

Comments:
A command can be issued with cls,it first clears the interpreter and then run th command.
A bare cls simply clears the interpreter.

Example:
Following command first clears the screen and then runs the command 'sysinfo'.

       gnucap>cls sysinfo
       Model name	  : Intel(R) Core(TM) i5-2450M CPU @ 2.50GHz
       OS Description     :"Ubuntu 12.04 LTS"
       CPU MHz	          : 2494.409
       RAM Available      : 1012348kB
       RAM Free           : 132372kB
       gnucap>

6.DEF
Purpose:Command is used to define a function.
Status:Implemented
Syntax:
    def [function_name]

Comments: Maximum three arguments can be provided which can be of type int or float.Variables are named x,y,z by default and only they should be used in the expression.

Example:
      gnucap>def f
      >x*2+y*2+z*2
      gnucap>f(1,2,3)
      12.
      gnucap>f(1.0,2.2,3.4)
      13.2
      gnucap>def max
      >(x>y)*x+(x<=y)*y
      gnucap>max(3.0,4.0)
      4.0

7.ECHO
Purpose:Prints the text
Status:Implemented

Syntax:
     echo [text]

Comments:
Command echoes the text in the interpreter.

Example:
     gnucap> echo
     Usage: echo [text]
     gnucap>echo "Hello"
     "Hello"
     gnucap>echo Hello World!
     Hello World!
     gnucap>


8.HISTORY
Purpose:Review the previous commands
Status:Implemented
Syntax:
    history
    history -t 
    history -s

Comments:
Command prints the history of commands that has been executed after enabling the history track mode. Commands tracking can be stopped by disabling the history mode.

Example:
      gnucap>history -t  starts tracking history
      gnucap>history     prints the history
      gnucap>history -s  stops tracking history


9.MDUMP
Purpose:Dumps the matrix values to a file
Status:Implemented

Syntax:
     mdump
     mdump filename

Comments:
Command dumps the dc-tran matrix into the console,if the filename is specified then output is redirected to the file.Two matrices one before the lu decomposition and one after the lu decomposition is dumped.

Example:
     gnucap>mdump
     DC-Tran matrix before LU decomposition:
     0.    0.    0.    0.   
     0.    0.02776   -0.005802   -0.02186   
     0.   -0.02738    0.01161    0.01578   
     0.   -273.8u   -0.005802    0.006157   
     DC-Tran matrix after LU decomposition:
     0.    0.    0.    0.   
     0.    0.02776   -0.209   -0.7874   
     0.   -0.02738    0.00589   -0.9816   
     0.   -273.8u   -0.005859    190.1u  
     gnucap>
    
     gnucap>mdump matrix.txt
     gnucap>!cat matrix.txt
     DC-Tran matrix before LU decomposition:
     0.0000 	    0.0000 	  0.0000 	0.0000 	
     0.0000 	    0.0278 	 -0.0058       -0.0219 	
     0.0000 	   -0.0274 	  0.0116 	0.0158 	
     0.0000 	   -0.0003 	 -0.0058 	0.0062 	
     DC-Tran matrix after LU decomposition:
     0.0000 	    0.0000 	  0.0000 	0.0000 	
     0.0000 	    0.0278 	 -0.2090       -0.7874 	
     0.0000 	   -0.0274 	  0.0059       -0.9816 	
     0.0000 	   -0.0003 	 -0.0059 	0.0002   
     gnucap> 
   


10.QUIT
Purpose:Terminates the gnucap interpreter
Status:Implemeted

Syntax:
    quit
    quit [status]

Comments:
 This quit command is the modified form of the current quit command.status(integer)can be passed as a parameter which signals the success or failure of the termination process to the Operating System.Non-zero status indicates unsuccessful termination to the Operating System.

Example:
     gnucap>quit 0       returns a success value to the Operating system
     Make sure you have saved everything you wanted to.
     Are you sure you want to quit?y/n:


11.REMCIRC
Purpose:Removes the current circuit from the list of circuits sourced into gnucap
Status:Done

12.RESET
Purpose:Reset command re-parses the input file.The circuit can then be re-run from its initial state
Status:Done

13.RUN
Purpose:Run the silumation as specified in the input file.
Status:Done

14.SETV
Purpose:Sets the value of a variable
Status:Implemented

Syntax:
    setv assign_to = value
    setv assign_to value

Comments:
Commands sets the value of “assign_to” variable to “value”.These values can be accessed via a show command.

Example:
     gnucap>setv
     Usage:setv assign_to = value
     gnucap>setv a = 3
     gnucap>showmod
     a=3
     gnucap>
    


15.SHELL
Purpose:Calls command interpreter of operating system
Status:Implemented
Syntax:
       shell

Comments:
Run 'exit' command to return to gnucap command interpreter.

Example:
     gnucap> shell
     itsrishre@rishabh-laptop:~$
When you are done with the shell,you can type exit to return to gnucap interpreter.
     itsrishre@rishabh-laptop:~$ exit
     gnucap>


16.SHOWMOD
Purpose:Lists model parameter values
Status:Done

17.SOURCE
Purpose:Reads a gnucap input file
Status:Done

18.STRCMP
Purpose:Compares two string
Status:Implemented
Syntax:
      strcmp string1 string2
      strcmp --help

Comments:

Compare two strings and outputs 0 if the two strings are equal otherwise output is the difference of the first non-matching character in string1 and string2.
Strings may be passed with or without " ".

Example:
      gnucap> strcmp "hello" hello   evaluates to true(flag=0)
      gnucap> strcmp hello hello     also evaluates to true.
      gnucap> strcmp --help          prints the usage of the command. 


19.SYSINFO
Purpose:Command prints the system information
Status:Implemented
Syntax:
       sysinfo

Comments:
Command prints the useful system information which users may use to send bug reports to the gnucap developers community.
This command doesn't works on Windows.
      

Example:
	gnucap> sysinfo
        Model name	: Intel(R) Core(TM) i5-2450M CPU @ 2.50GHz
        OS Description  :"Ubuntu 12.04 LTS"
	CPU MHz		: 2494.420
	RAM Available   :1012348kB
	RAM Free        :145640kB


20.TRACE
Purpose:Trace command traces nodes
Status:Not implemented

21.UNALIAS
Purpose:Removes any aliases present for the commands
Status:Implemented

Syntax:
     unalias [word]
     unalias all

Comments:
word is the aliased name of the command. all option removes all the specified aliases.

Example:
If info is the aliased name of sysinfo then it can be unaliased like

     gnucap>unalias info  Removes the alias for sysinfo
     gnucap>unalias all   Removes all aliases
     are you sure you want to remove all aliases?y/n:y
     all aliases removed


22.UNDEF
Purpose:Command removes the the user-defined functions.
Status:Implemented

Syntax:
    undef [function_name]
    undef all

Comments:
all flag removes all the user defined functions.

Example:
     gnucap>undef max    Removes the ''max'' function
     gnucap>unalias all   Removes all function definitions
     are you sure you want to remove all function definitions?y/n:y
     all functions removed.


23.VERSION
Purpose:Prints the version of gnucap
Status:Implemented

Syntax:

    version

Comments:
'ver' also works.

Example:
	gnucap> version
        Gnucap Version: 2009.12.07 RCS 26.136

24. : Command

Purpose: command '':'' issued with multiple commands separated by semi-colon runs each command one by one.

Status:Implemented

Syntax:
       : command_1;command_2;.....;command_n

Comments:

Any number of commands may be passes to the : command.
Shell commands passed with ! command are not executed.Like, '':!ls'' will fail to run.

Example:
        gnucap>: ver
        Gnucap Version: 2009.12.07 RCS 26.136
        gnucap>: ver;echo "Hello World!"
        Gnucap Version: 2009.12.07 RCS 26.136
        Hello World!
        gnucap>: strcmp "Hello" Hello;def f;shell
        flag=0
        >x^2+y^2
        itsrishre@rishabh-laptop:~$exit
        gnucap>
        

*Commands's Syntax,Details and Examples will be added after the command is implemented.
Check http://gnucap.org/dokuwiki/doku.php?id=gnucap:user:command_plugins

